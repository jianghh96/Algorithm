leetcode:
94.二叉树的中序遍历 迭代 栈 x2
95.不同的二叉搜索树II 递归
96.不同的二叉搜索树 动态规划 观察根节点
98.验证二叉搜索树 中序遍历 x2
101.对称二叉树 √ 递归 √
102.二叉树的层序遍历 √ 队列 √
107.二叉树的层次遍历II √
104.二叉树的最大深度 √ 递归 √
105.从前序与中序遍历序列构造二叉树 递归 注意哈希表用法 x2
106.从中序与后序遍历序列构造二叉树 递归 注意哈希表用法
108.将有序数组转换为二叉搜索树 递归
109.有序链表转换二叉搜索树 找链表中间节点的前一节点
110.平衡二叉树 √ 递归 √
111.二叉树的最小深度 √ 递归 注意边界条件
112.路径总和 √ 递归 注意为true条件 √
113.路径总和II 回溯 x2
114.二叉树展开为链表 √ 递归 注意非递归做法
124.二叉树中的最大路径和 hard 递归 x2
129.求根节点到叶节点数字之和 DFS
144.二叉树的前序遍历 迭代 栈 x2
145.二叉树的后序遍历 迭代 栈 x2
199.二叉树的右视图 BFS
226.翻转二叉树 √ 递归 √
230.二叉搜索树中第K小的元素 √ 二叉查找树中序遍历有序! 中序遍历 栈 递归 √
235.二叉搜索树的最近公共祖先 递归 √
236.二叉树的最近公共祖先 递归 x2
337.打家劫舍 III √ 递归 推荐动态规划
404.左叶子之和 左叶子->先判断是否为叶子节点
437.路径总和III 递归 关注root和左右子树
501.二叉搜索树中的众数 中序遍历
513.找树左下角的值 √ 层序遍历
530.二叉搜索树的最小绝对差 √ 中序遍历
538.把二叉搜索树转换为累加树 反向中序遍历
543.二叉树的直径 看清题意 √
572.另一个树的子树 递归 关注root和左右子树
617.合并二叉树 √ 递归
637.二叉树的层平均值 层序遍历 队列
653.两数之和IV-输入BST 中序遍历+双指针 || HashSet+递归
669.修剪二叉搜索树 递归
671.二叉树中第二小的节点 递归
687.最长同值路径 递归
958.二叉树的完全性检验 层序遍历

剑指offer：
07.重建二叉树 递归 √ 注意哈希表用法 与leetcode 105重复 
26.树的子结构 注意
27.二叉树的镜像 递归 √ 与leetcode 226重复
28.对称的二叉树 条件考虑完全 与leetcode 101重复
32-I.从上到下打印二叉树 层序遍历 √ 队列 new LinkedList<>()
32-II.从上到下打印二叉树II 层序遍历 √ 与leetcode 102重复 √
32-III.从上到下打印二叉树III 层序遍历 双端队列 Collections.reverse(list)
33.二叉搜索树的后序遍历序列 
34.二叉树中和为某一值的路径 回溯 注意细节 与leetcode 113重复
36.二叉搜索树与双向链表 二叉搜索树中序遍历 递归 x2
54.二叉搜索树的第k大节点 反中序遍历 右、根、左 递归 与leetcode 230类似
55-I.二叉树的深度 层序遍历 √ 注意递归
55-II.平衡二叉树 √
68-I.二叉搜索树的最近公共祖先 √ 与leetcode 235重复
68-II.二叉树的最近公共祖先 注意 与leetcode 236重复
